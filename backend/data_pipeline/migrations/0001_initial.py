# Generated by Django 4.2 on 2025-04-26 20:50

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AQIRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(verbose_name="记录时间")),
                (
                    "aqi",
                    models.FloatField(blank=True, null=True, verbose_name="AQI指数"),
                ),
                (
                    "quality",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="空气质量等级",
                    ),
                ),
                (
                    "description",
                    models.CharField(max_length=50, null=True, verbose_name="健康指引"),
                ),
                (
                    "measure",
                    models.CharField(max_length=50, null=True, verbose_name="描述"),
                ),
                (
                    "timestr",
                    models.CharField(max_length=20, null=True, verbose_name="时间描述"),
                ),
                (
                    "co",
                    models.CharField(blank=True, null=True, verbose_name="CO(mg/m³)"),
                ),
                (
                    "no2",
                    models.CharField(blank=True, null=True, verbose_name="NO2(μg/m³)"),
                ),
                (
                    "o3",
                    models.CharField(blank=True, null=True, verbose_name="O3(μg/m³)"),
                ),
                (
                    "pm10",
                    models.CharField(blank=True, null=True, verbose_name="PM10(μg/m³)"),
                ),
                (
                    "pm25",
                    models.CharField(
                        blank=True, null=True, verbose_name="PM2.5(μg/m³)"
                    ),
                ),
                (
                    "so2",
                    models.CharField(blank=True, null=True, verbose_name="SO2(μg/m³)"),
                ),
                ("raw_data", models.JSONField(default=dict, verbose_name="原始数据")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
            ],
            options={
                "verbose_name": "空气质量记录",
                "verbose_name_plural": "空气质量记录",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="AQIStation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="监测站名称")),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        geography=True, srid=4326, verbose_name="坐标位置"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "空气质量监测站",
                "verbose_name_plural": "空气质量监测站",
            },
        ),
        migrations.CreateModel(
            name="BirdObservation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("address", models.CharField(max_length=255, verbose_name="观测地点")),
                ("start_time", models.DateTimeField(verbose_name="开始时间")),
                ("end_time", models.DateTimeField(verbose_name="结束时间")),
                ("taxon_count", models.IntegerField(verbose_name="物种总数")),
                ("serial_id", models.CharField(max_length=50, verbose_name="记录编号")),
                (
                    "location",
                    django.contrib.gis.db.models.fields.PointField(
                        geography=True, srid=4326, verbose_name="坐标点"
                    ),
                ),
                (
                    "raw_data",
                    models.JSONField(blank=True, null=True, verbose_name="原始数据"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "鸟类观测记录",
                "verbose_name_plural": "鸟类观测记录",
            },
        ),
        migrations.CreateModel(
            name="BirdSpeciesRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("taxon_id", models.IntegerField(verbose_name="物种ID")),
                ("taxon_name", models.CharField(max_length=100, verbose_name="中文名")),
                ("latin_name", models.CharField(max_length=100, verbose_name="拉丁名")),
                ("taxon_order", models.CharField(max_length=50, verbose_name="目")),
                ("taxon_family", models.CharField(max_length=50, verbose_name="科")),
                ("count", models.IntegerField(default=1, verbose_name="数量")),
                (
                    "has_images",
                    models.BooleanField(default=False, verbose_name="是否有照片"),
                ),
                (
                    "outside_type",
                    models.IntegerField(default=0, verbose_name="外来类型"),
                ),
                (
                    "activity_id",
                    models.IntegerField(blank=True, null=True, verbose_name="活动ID"),
                ),
                (
                    "observation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="species_records",
                        to="data_pipeline.birdobservation",
                        verbose_name="观测记录",
                    ),
                ),
            ],
            options={
                "verbose_name": "鸟类物种记录",
                "verbose_name_plural": "鸟类物种记录",
            },
        ),
        migrations.AddIndex(
            model_name="birdobservation",
            index=models.Index(
                fields=["serial_id"], name="data_pipeli_serial__e5cb4c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="birdobservation",
            index=models.Index(
                fields=["start_time"], name="data_pipeli_start_t_6ff067_idx"
            ),
        ),
        migrations.AddField(
            model_name="aqirecord",
            name="station",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="records",
                to="data_pipeline.aqistation",
                verbose_name="监测站",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="birdspeciesrecord",
            unique_together={("observation", "taxon_id")},
        ),
        migrations.AddIndex(
            model_name="aqirecord",
            index=models.Index(
                fields=["station", "timestamp"], name="data_pipeli_station_a64954_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="aqirecord",
            index=models.Index(
                fields=["timestamp"], name="data_pipeli_timesta_511d3d_idx"
            ),
        ),
    ]
