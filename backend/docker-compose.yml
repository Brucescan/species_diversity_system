services:
  # Django后端服务
  backend:
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_DB=mydb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - GDAL_LIBRARY_PATH=/usr/lib/libgdal.so
      - GEOS_LIBRARY_PATH=/usr/lib/libgeos_c.so
    depends_on:
      database:
        condition: service_healthy
    networks:
      - app-network
#    healthcheck:
#      test: ["CMD-SHELL", "curl -f http://localhost:8000/api/aqi/station_lastest_list/ || exit 1"]
#      interval: 10s
#      timeout: 5s
#      retries: 3

  # PostgreSQL服务（带PostGIS扩展）
  database:
    image: postgis/postgis:16-3.4
    container_name: postgres_container
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d mydb" ]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=mydb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  postgres_data: {}

networks:
  app-network:
    driver: bridge